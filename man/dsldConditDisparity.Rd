\name{dsldConditDisparity}
\alias{dsldConditDisparity}

\title{DSLDConditDisparity}
\description{
    Plots Y against X, with restrictions `condits` placed upon the dataset
    prior to predictive modeling on the dataset with `qeFtn` to extract underlying 
    patterns with respect to different variables. Not unlike Simpson's paradox, but 
    more specific to numeric data.

    The utility of this function comes from its ability to determine marginal effects 
    that might depend on the values of the other features. In other words, statistics that 
    generalize across a whole group may fail to take into account specifics about underlying 
    differences between subgroups (i.e. statistics about RECIDIVISM, a Y variable, relative to 
    AGE, an X variable, may fail to take into account different relationships across RACE, a 
    sensitive variable). This is shown in the first example given.
}

\usage{
    dsldConditDisparity <- function(data, yName, sName, xName, condits, qeFtn=qeKNN,
                            minS=50, yLim=NULL, useLoess=TRUE)
}

\arguments{
\item{data}{dataset in dataframe form}
\item{yName}{as in qeML functions, predictive variable, must be numeric}
\item{sName}{name of the sensitive variable, an R factor}
\item{xName}{name of a numeric column to take comparisons with}
\item{condits}{an R vector; each component is a character string for an R logical 
expression representing a desired condition; these must NOT involve sName}
\item{qeFtn}{reg function (defaults only), defaults to qeKNN}
\item{minS}{minimum size for an S group to be retained in the analysis, defaults to 50}
\item{yLim}{a 2-element vector specifying the lower and upper vertical plot limits, defaults to fit data}
\item{useLoess}{if TRUE, do Loess smoothing on the regression values, defaults to TRUE}
}

\author{
    N. Matloff, A. Ashok, S. Martha, A. Mittal
}

\examples{
# The dsldConditDisparity function aims to provide a seamless experience, requiring minimal effort to utilize its
# capabilities. Once the package is successfully downloaded and installed, the function can be leveraged by simply 
# employing similar commands shown in the examples.

#   Example 1:
#   Let's investigate the statistics about RECIDIVISM that generalize across race and fail to take into account 
#   specifics about underlying differences between subgroups (i.e. African-American, Caucasian, Hispanic). 
#
#   First, choose the COMPAS dataset. Make sure to convert the yName column to numeric before calling the function.
#   The function arguments here are (data = compas, yName = 'two_year_recid', sName = 'race', xName = 'age', 
#   condits = c('priors_count <= 4','decile_score>=6'), qeFtn = qeKNN).

    data(compas)
    compas$two_year_recid <- as.numeric(compas$two_year_recid == 'Yes')
    dsldConditDisparity(compas,'two_year_recid', 'race', 'age', c('priors_count <= 4','decile_score>=6'), qeKNN)

    # figures functionality coming soon
    # \figure{
    #   \includegraphics{man/Example1.png}
    #   \label{Example 1 Plot}
    # }

#   The blue (African-American) and red (Hispanic) curves exhibit the behavior that during middle age, the probability 
#   of recidivism declines. But the purple curve (Caucasian) shows the opposite. This shows the importance of exploring 
#   interactions between variables. Otherwise, we would have generalized that the probability of recidivism declines
#   during middle age for all races.

#   Example 2:
#   Let's investigate the same statistics about RECIDIVISM explored in example 1 but this time use a different qeML
#   function.

#   The function arguments here are (data = compas, yName = 'two_year_recid', sName = 'race', xName = 'age', 
#   condits = c('priors_count <= 4','decile_score>=6'), qeFtn = qeGBoost).

    data(compas)
    compas$two_year_recid <- as.numeric(compas$two_year_recid == 'Yes')
    dsldConditDisparity(compas,'two_year_recid', 'race', 'age', c('priors_count <= 4','decile_score>=6'), qeGBoost)

    # figures functionality coming soon
    # \figure{
    #   \includegraphics{man/Example2.png}
    #   \label{Example 2 Plot}
    # }

#   As you can see the curves generated by \code{qeGBoost} are similar to the curves in Example 1 using \code{qeKNN}. The use of any
#   of the qeML functions should give similar plots.

#   Example 3:
#    Let's investigate the statistics about RECIDIVISM that generalize across sex and fail to take into account 
#    specifics about underlying differences between subgroups (i.e. Female, Male).
#
#    First, choose the COMPAS dataset. Make sure to convert the yName column to numeric before calling the function.
#    The function arguments here are (data = compas, yName = 'two_year_recid', sName = 'sex', xName = 'age', 
#    condits = c('priors_count <= 4','decile_score>=6'), qeFtn = qeKNN).

    data(compas)
    compas$two_year_recid <- as.numeric(compas$two_year_recid == 'Yes')
    dsldConditDisparity(compas,'two_year_recid','sex','age',c('priors_count <= 4=10000','decile_score>=6'),qeKNN)

    # figures functionality coming soon
    # \figure{
    #   \includegraphics{man/Example3.png}
    #   \label{Example 3 Plot}
    # }

#   The blue (Female) curve exhibits the behavior that during middle age, the probability of recidivism inclines. But 
#   the red curve (Male) shows the opposite. This shows the importance of exploring interactions between variables. 
#   Otherwise, we would have generalized that the probability of recidivism declines during middle age for both sexes.
}

